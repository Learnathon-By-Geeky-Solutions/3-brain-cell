name: Backend CI Pipeline

on:
  pull_request:
    types: [opened, synchronize, reopened]

env:
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  POSTGRES_USER: test_user
  POSTGRES_PASSWORD: test_password
  POSTGRES_DB: uddhar

jobs:
  backend-ci:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write 

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 20.x
        cache: 'npm'
    
    # Frontend setup
    - name: Install frontend dependencies
      working-directory: frontend/uddhar-frontend
      run: npm install

    # Backend setup
    - name: Install backend dependencies
      working-directory: backend
      run: npm install
      env:
        DATABASE_URL: postgres://${{ env.POSTGRES_USER }}:${{ env.POSTGRES_PASSWORD }}@localhost:5432/${{ env.POSTGRES_DB }}

    # Backend tests with coverage
    - name: Run backend tests
      working-directory: backend
      run: npm test -- --coverage --watchAll=false
      env:
        NODE_ENV: test
        ACCUWEATHER_API_URL_FOR_KEY: ${{ secrets.ACCUWEATHER_API_URL_FOR_KEY }}
        ACCUWEATHER_API_URL_FOR_INFO: ${{ secrets.ACCUWEATHER_API_URL_FOR_INFO }}
        DATABASE_URL: postgres://${{ env.POSTGRES_USER }}:${{ env.POSTGRES_PASSWORD }}@localhost:5432/${{ env.POSTGRES_DB }}

    # SonarCloud analysis
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        project-base: ./